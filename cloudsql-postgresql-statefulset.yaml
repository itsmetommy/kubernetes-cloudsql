# Create sql instance
# Create user artifactory
# Create database artifactory
# Create service account with Cloud SQL Client access
# Create secret cloudsql-instance-credentials
# kubectl create secret generic cloudsql-instance-credentials \
#  --from-file=credentials.json=./credentials.json
# Create secret artifactory-cloudsql-db-credentials
# kubectl create secret generic artifactory-cloudsql-db-credentials \
#  --from-literal=username=artifactory \
#  --from-literal=password=[YOUR_PASSWORD] \
#  --from-literal=connectionName=[INSTANCE_CONNECTION_NAME]

apiVersion: v1
kind: Service
metadata:
  namespace: itsmetommy
  name: artifactory
  labels:
    app: artifactory
spec:
  ports:
  - port: 8081
    name: web
  clusterIP: None
  selector:
    app: artifactory
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: itsmetommy
  name: artifactory
spec:
  selector:
    matchLabels:
      app: artifactory
  serviceName: "artifactory"
  replicas: 1
  template:
    metadata:
      labels:
        app: artifactory
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: artifactory
        image: docker.bintray.io/jfrog/artifactory-oss:6.0.1
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_TYPE
          value: postgresql
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: artifactory-cloudsql-db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: artifactory-cloudsql-db-credentials
              key: password
        - name: DB_HOST
          value: 127.0.0.1
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: artifactory-volume
          mountPath: "/var/opt/jfrog/artifactory"
        readinessProbe:
          httpGet:
            path: '/artifactory/webapp/#/login'
            port: 8081
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 10
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: '/artifactory/webapp/#/login'
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 20
          successThreshold: 1
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        env:
          - name: CONNECTION_NAME
            valueFrom:
              secretKeyRef:
                name: artifactory-cloudsql-db-credentials
                key: connectionName
        command: ["/cloud_sql_proxy",
                  "-instances=$(CONNECTION_NAME)=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
  volumeClaimTemplates:
    - metadata:
        name: artifactory-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi